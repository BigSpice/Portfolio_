.box_ {
	box-sizing: border-box;
    height: 850px;
    width: 1100px;
}

.dark\:light_cs:is(.dark *) {
    background-color: rgb(23 23 23 / 0.5);
    --tw-backdrop-blur: blur(4px);

}
.light_cs{
    --tw-backdrop-blur: blur(4px);

    background-color: rgb(245 245 245 );

}
.margin-t{
 margin-top: 20px;

}
.bod_parent{
    width: 100%;
	height: 40%;
    position: relative;
margin: 0; padding: 0;
    align-items: center;

display: flex;
justify-content: space-evenly;
padding: 4px;
min-width: 70%;
max-width: 100%;
z-index: 10;
	overflow-y: auto;

}
.bod
{

    border-radius: var(--radius);
    align-items: stretch;
    border-radius: var(--radius);
}
@media only screen and (max-width: 1000px) {
      .bodd_parent {
               width: 70% !important;

      }
	 
	  .left-rem{

		    left: 0rem;

	  }
    }
.imgz {
	width: 100%;
	display: block;
	aspect-ratio: 1 / 1;
	object-fit: cover;
	transition: transform 600ms;
	margin-top: 10px;
    border-radius: inherit;
}
.uls {
	
    list-style: none;
    margin: 0;
    padding-left: 15px;
    padding-right: 15px;
    padding-bottom: 15px;
    display: block;
    row-gap: 0.5rem;
    grid-template-columns: repeat(auto-fit, minmax(8rem, 20rem));
    columns: 3;
}

figure {
	margin: 0;
	position: relative;
	overflow: hidden;
    border-radius: var(--radius);

}

figure::after {
	content: '';
	position: absolute;
	top: 50%;
	left: 50%;
	width: 200%;
	height: 200%;
	background: rgba(0, 0, 0, 0.5);
	transform-origin: center;
	opacity: 0;
	transform: scale(2);
	transition: opacity 100ms;
}

figcaption {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	display: flex;
	justify-content: center;
	place-items: center;
	text-align: center;
	padding: 1rem;
	color: white;
	font-size: 1.2rem;
	z-index: 1;
	opacity: 0;
	transition: opacity 300ms, transform 350ms;
}

a:is(:hover, :focus) figure::after {
	opacity: 1;
}

a:is(:hover, :focus) figcaption {
	opacity: 1;
	transition: opacity 300ms;
}

@media (prefers-reduced-motion: no-preference) {
	figcaption {
		transform: translate3d(0, 2rem, 0);
	}
	
	figure::after {
		border-radius: 50%;
		opacity: 1;
		transform: scale(0);
		transition: transform 500ms;
	}
	
	a:is(:hover, :focus) figure::after {
		transform: scale(2.5);
	}

	a:is(:hover, :focus) figcaption {
		opacity: 1;
		transform: translate3d(0, 0, 0);
		transition: opacity 400ms 200ms, transform 400ms 200ms;
	}

	a:is(:hover, :focus) img {
		transform: scale(1.2);
	}
}